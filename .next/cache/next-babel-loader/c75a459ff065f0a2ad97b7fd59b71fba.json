{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bakk\\\\Documents\\\\GitHub\\\\yernemm-xyz\\\\pages\\\\projects\\\\processing\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Wrapper from '../../../components/page-wrapper';\nimport Head from 'next/head';\nexport default function Proj(props) {\n  return __jsx(React.Fragment, null, __jsx(Wrapper, {\n    title: \"Processing Experiments: \\\"props\\\"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Here are some projects I made when trying out Processing using \", __jsx(\"a\", {\n    href: \"https://p5js.org/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"p5.js\"), \".\", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), \"These may or may not be entirely functional.\"), __jsx(\"iframe\", {\n    frameBorder: \"0\",\n    style: {\n      width: '100%',\n      height: '1000px'\n    },\n    src: \"/projects/processing/wavyboi/index.html\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })));\n}\nexport async function getStaticPaths() {// Return a list of possible value for id\n}\nexport async function getStaticProps({\n  params\n}) {// Fetch necessary data for the blog post using params.id\n}\nexport function getAllIds() {\n  const fileNames = fs.readdirSync('/public/projects/processing/'); // Returns an array that looks like this:\n  // [\n  //   {\n  //     params: {\n  //       id: 'ssg-ssr'\n  //     }\n  //   },\n  //   {}\n  //     params: {\n  //       id: 'pre-rendering'\n  //     }\n  //   }\n  // ]\n\n  return fileNames.map(fileName => {\n    return {\n      params: {\n        id: fileName.replace(/\\//, '')\n      }\n    };\n  });\n}","map":{"version":3,"sources":["C:/Users/Bakk/Documents/GitHub/yernemm-xyz/pages/projects/processing/[id].js"],"names":["Wrapper","Head","Proj","props","width","height","getStaticPaths","getStaticProps","params","getAllIds","fileNames","fs","readdirSync","map","fileName","id","replace"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,kCAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAE,SAAM,4BAC3C,MAAC,OAAD;AAAS,IAAA,KAAK,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEACU;AAAG,IAAA,IAAI,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADV,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,iDAFR,EASY;AAAQ,IAAA,WAAW,EAAC,GAApB;AAAwB,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC,MAAP;AAAeC,MAAAA,MAAM,EAAC;AAAtB,KAA/B;AAAgE,IAAA,GAAG,EAAC,yCAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATZ,CAD2C,CAAN;AAapC;AAED,OAAO,eAAeC,cAAf,GAAgC,CACnC;AAED;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C,CAC/C;AACD;AAED,OAAO,SAASC,SAAT,GAAqB;AAE1B,QAAMC,SAAS,GAAGC,EAAE,CAACC,WAAH,CAAe,8BAAf,CAAlB,CAF0B,CAI1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAOF,SAAS,CAACG,GAAV,CAAcC,QAAQ,IAAI;AAC/B,WAAO;AACLN,MAAAA,MAAM,EAAE;AACNO,QAAAA,EAAE,EAAED,QAAQ,CAACE,OAAT,CAAiB,IAAjB,EAAuB,EAAvB;AADE;AADH,KAAP;AAKD,GANM,CAAP;AAOD","sourcesContent":["import Wrapper from '../../../components/page-wrapper';\r\nimport Head from 'next/head';\r\nexport default function Proj(props){ return<>\r\n<Wrapper title='Processing Experiments: &quot;props&quot;'>\r\n \r\n        <p>Here are some projects I made when trying out Processing \r\n            using <a href=\"https://p5js.org/\">p5.js</a>.\r\n            <br />\r\n            These may or may not be entirely functional.\r\n\r\n            </p>\r\n\r\n            <iframe frameBorder=\"0\" style={{width:'100%', height:'1000px'}} src=\"/projects/processing/wavyboi/index.html\"></iframe>\r\n\r\n    </Wrapper></>\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    // Return a list of possible value for id\r\n\r\n  }\r\n  \r\n  export async function getStaticProps({ params }) {\r\n    // Fetch necessary data for the blog post using params.id\r\n  }\r\n\r\n  export function getAllIds() {\r\n    \r\n    const fileNames = fs.readdirSync('/public/projects/processing/')\r\n  \r\n    // Returns an array that looks like this:\r\n    // [\r\n    //   {\r\n    //     params: {\r\n    //       id: 'ssg-ssr'\r\n    //     }\r\n    //   },\r\n    //   {}\r\n    //     params: {\r\n    //       id: 'pre-rendering'\r\n    //     }\r\n    //   }\r\n    // ]\r\n    return fileNames.map(fileName => {\r\n      return {\r\n        params: {\r\n          id: fileName.replace(/\\//, '')\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n "]},"metadata":{},"sourceType":"module"}