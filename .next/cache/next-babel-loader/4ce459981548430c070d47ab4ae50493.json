{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport fetch from 'isomorphic-unfetch';\n\nvar Entities = require('html-entities').XmlEntities;\n\nvar entities = new Entities();\n\nvar GoogleDoc =\n/*#__PURE__*/\nfunction () {\n  function GoogleDoc(url) {\n    _classCallCheck(this, GoogleDoc);\n\n    this.url = url;\n  }\n\n  _createClass(GoogleDoc, [{\n    key: \"getData\",\n    value: function getData() {\n      var res, data, csssplit1, body, bodyCleanRegex, bodyArr, bodyt, i, bodyin, out;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(this.url));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.text());\n\n            case 5:\n              data = _context.sent;\n              csssplit1 = data.split('<style type=\"text/css\">')[1];\n              if (csssplit1) csssplit1 = csssplit1.split('</style>')[0];\n              body = data.split(\"</head>\")[1].split(\"</html>\")[0].replace(\"<body\", \"<div\").replace(\"</body\", \"</div\");\n              bodyCleanRegex = /(<style([\\s\\S]*?)<\\/style>)|(<script([\\s\\S]*?)<\\/script>)|(https:\\/\\/www[\\s\\S]google[\\s\\S]com\\/url\\?q=)|(&amp;sa=D&amp;ust=[0-9]+)|( class=\"[ 0-9a-z]+\")/g;\n              body = body.replace(bodyCleanRegex, \"\");\n\n              if (body.includes(\"{{\")) {\n                bodyArr = [];\n                bodyt = body.split(\"{{\");\n                bodyArr.push(bodyt[0]);\n\n                for (i = 1; i < bodyt.length; i++) {\n                  bodyin = bodyt[i].split(\"}}\");\n                  bodyArr.push(entities.decode(bodyin[0]));\n                  bodyArr.push(bodyin[1]);\n                }\n\n                body = bodyArr.join('');\n              }\n\n              body = body.replace(/{\\\\{/g, '{{');\n              out = {\n                data: data,\n                body: body,\n                style: csssplit1\n              };\n              return _context.abrupt(\"return\", out);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody() {\n      var data;\n      return _regeneratorRuntime.async(function getBody$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.getData());\n\n            case 2:\n              data = _context2.sent;\n              return _context2.abrupt(\"return\", {\n                __html: data.body\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this);\n    }\n  }]);\n\n  return GoogleDoc;\n}();\n\nexport default GoogleDoc;","map":null,"metadata":{},"sourceType":"module"}