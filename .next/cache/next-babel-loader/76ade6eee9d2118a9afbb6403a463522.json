{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bakk\\\\Documents\\\\GitHub\\\\yernemm-xyz\\\\pages\\\\projects\\\\processing.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Wrapper from '../../components/page-wrapper';\nimport { faRssSquare } from '@fortawesome/free-solid-svg-icons';\nimport { getAllProcessing } from '../../scripts/getAllProcessing';\n\nlet Proc = props => __jsx(React.Fragment, null, __jsx(Wrapper, {\n  title: \"Processing Experiments\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \"Here are some projects I made when trying out Processing using \", __jsx(\"a\", {\n  href: \"https://p5js.org/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \"p5.js\"), \".\", __jsx(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}), \"These may or may not be entirely functional.\"), props.projData.ooga, __jsx(\"iframe\", {\n  frameBorder: \"0\",\n  style: {\n    width: '100%',\n    height: '1000px'\n  },\n  src: \"/projects/processing/wavyboi/index.html\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n})));\n\nexport default Proc;\n\nProc.getInitialProps = async function (context) {\n  const {\n    readdirSync\n  } = require('fs');\n\n  let paths = readdirSync('public/projects/processing/', {\n    withFileTypes: true\n  }).filter(dirent => dirent.isDirectory()).map(dirent => dirent.name);\n  console.log(paths);\n  const projData = {\n    paths: paths\n  };\n  return {\n    projData\n  };\n};","map":{"version":3,"sources":["C:/Users/Bakk/Documents/GitHub/yernemm-xyz/pages/projects/processing.js"],"names":["Wrapper","faRssSquare","getAllProcessing","Proc","props","projData","ooga","width","height","getInitialProps","context","readdirSync","require","paths","withFileTypes","filter","dirent","isDirectory","map","name","console","log"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,+BAApB;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAAQC,gBAAR,QAA+B,gCAA/B;;AACA,IAAIC,IAAI,GAAGC,KAAK,IAAK,4BACjB,MAAC,OAAD;AAAS,EAAA,KAAK,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEACU;AAAG,EAAA,IAAI,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADV,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,iDAFJ,EASSA,KAAK,CAACC,QAAN,CAAeC,IATxB,EAWQ;AAAQ,EAAA,WAAW,EAAC,GAApB;AAAwB,EAAA,KAAK,EAAE;AAACC,IAAAA,KAAK,EAAC,MAAP;AAAeC,IAAAA,MAAM,EAAC;AAAtB,GAA/B;AAAgE,EAAA,GAAG,EAAC,yCAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAXR,CADiB,CAArB;;AAiBA,eAAeL,IAAf;;AAEAA,IAAI,CAACM,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAkBC,OAAO,CAAC,IAAD,CAA/B;;AAEA,MAAIC,KAAK,GAAKF,WAAW,CAAC,6BAAD,EAAgC;AAAEG,IAAAA,aAAa,EAAE;AAAjB,GAAhC,CAAX,CACbC,MADa,CACNC,MAAM,IAAIA,MAAM,CAACC,WAAP,EADJ,EAEbC,GAFa,CAETF,MAAM,IAAIA,MAAM,CAACG,IAFR,CAAd;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AAEA,QAAMR,QAAQ,GAAG;AAACQ,IAAAA,KAAK,EAACA;AAAP,GAAjB;AACA,SAAO;AAAER,IAAAA;AAAF,GAAP;AACD,CAXH","sourcesContent":["import Wrapper from '../../components/page-wrapper';\r\nimport { faRssSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport {getAllProcessing} from '../../scripts/getAllProcessing';\r\nlet Proc = props => (<>\r\n    <Wrapper title='Processing Experiments'>\r\n \r\n        <p>Here are some projects I made when trying out Processing \r\n            using <a href=\"https://p5js.org/\">p5.js</a>.\r\n            <br />\r\n            These may or may not be entirely functional.\r\n\r\n            </p>\r\n\r\n            {props.projData.ooga}\r\n\r\n            <iframe frameBorder=\"0\" style={{width:'100%', height:'1000px'}} src=\"/projects/processing/wavyboi/index.html\"></iframe>\r\n\r\n    </Wrapper></>\r\n)\r\n\r\nexport default Proc\r\n\r\nProc.getInitialProps = async function(context) {\r\n    const { readdirSync } = require('fs');\r\n\r\n    let paths =   readdirSync('public/projects/processing/', { withFileTypes: true })\r\n    .filter(dirent => dirent.isDirectory())\r\n    .map(dirent => dirent.name);\r\n\r\n    console.log(paths);\r\n\r\n    const projData = {paths:paths}\r\n    return { projData }\r\n  }"]},"metadata":{},"sourceType":"module"}