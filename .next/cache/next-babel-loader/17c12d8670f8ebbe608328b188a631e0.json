{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bakk\\\\Documents\\\\GitHub\\\\yernemm-xyz\\\\pages\\\\posts\\\\[id].js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Wrapper from '../../components/page-wrapper';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport GoogleDoc from '../../scripts/GoogleDoc';\nimport Head from 'next/head';\n\nvar csvtojson = require(\"csvtojson\");\n\nvar Posts = function Posts(props) {\n  return __jsx(Wrapper, {\n    title: \"Post: \" + props.postData.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: props.body,\n    className: \"belowdiv\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, __jsx(_JSXStyle, {\n    id: \"3050419254\",\n    __self: _this\n  }, \"a:link{color:#ccf;}a:visited{color:#ccf;}a:hover{color:#88f;}a:active{color:#88f;}img{max-width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQmFra1xcRG9jdW1lbnRzXFxHaXRIdWJcXHllcm5lbW0teHl6XFxwYWdlc1xccG9zdHNcXFtpZF0uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBVytCLEFBSWdCLEFBS0EsQUFLQSxBQUtBLEFBSU0sV0FsQm5CLEFBS0EsQUFLQSxBQUtBLElBSUEiLCJmaWxlIjoiQzpcXFVzZXJzXFxCYWtrXFxEb2N1bWVudHNcXEdpdEh1YlxceWVybmVtbS14eXpcXHBhZ2VzXFxwb3N0c1xcW2lkXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBXcmFwcGVyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvcGFnZS13cmFwcGVyJztcclxuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XHJcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XHJcbmltcG9ydCBHb29nbGVEb2MgZnJvbSAnLi4vLi4vc2NyaXB0cy9Hb29nbGVEb2MnXHJcbmltcG9ydCBIZWFkIGZyb20gJ25leHQvaGVhZCdcclxuY29uc3QgY3N2dG9qc29uID0gcmVxdWlyZShcImNzdnRvanNvblwiKTtcclxubGV0IFBvc3RzID0gcHJvcHMgPT4gKCBcclxuICAgIDxXcmFwcGVyIHRpdGxlPXtcIlBvc3Q6IFwiICsgcHJvcHMucG9zdERhdGEudGl0bGV9ID5cclxuXHJcbiAgICAgICAgXHJcbiAgICAgIDxkaXYgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3Byb3BzLmJvZHl9IGNsYXNzTmFtZT1cImJlbG93ZGl2XCIgLz5cclxuICAgICAgPEhlYWQ+PHN0eWxlIGpzeCBnbG9iYWw+e2BcclxuICAvKiB1bnZpc2l0ZWQgbGluayAqL1xyXG4gIGE6bGluayB7XHJcbiAgICBjb2xvcjogI2NjZjtcclxuICB9XHJcbiAgXHJcbiAgLyogdmlzaXRlZCBsaW5rICovXHJcbiAgYTp2aXNpdGVkIHtcclxuICAgIGNvbG9yOiAjY2NmO1xyXG4gIH1cclxuICBcclxuICAvKiBtb3VzZSBvdmVyIGxpbmsgKi9cclxuICBhOmhvdmVyIHtcclxuICAgIGNvbG9yOiAjODhmO1xyXG4gIH1cclxuICBcclxuICAvKiBzZWxlY3RlZCBsaW5rICovXHJcbiAgYTphY3RpdmUge1xyXG4gICAgY29sb3I6ICM4OGY7XHJcbiAgfVxyXG5cclxuICBpbWcge1xyXG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5gfTwvc3R5bGU+PC9IZWFkPlxyXG4gICAgICBcclxuICAgICAgPGhyIC8+XHJcbiAgICAgICAgPGRpdiBzdHlsZT17ZGF0ZVN0eWxlfT57Z2V0RGF0ZXMocHJvcHMucG9zdERhdGEuY3JlYXRlZCwgcHJvcHMucG9zdERhdGEudXBkYXRlZCl9PC9kaXY+XHJcbiAgICA8L1dyYXBwZXI+XHJcbilcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBvc3RzXHJcblxyXG5jb25zdCBkYXRlU3R5bGUgPSB7XHJcbiAgICBjb2xvcjogJyM5OTknLFxyXG4gICAgZm9udFNpemU6ICc4MCUnXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldERhdGVzKGNyZWF0ZWQsIGVkaXRlZCl7XHJcbiAgICBsZXQgY29udGVudCA9IFtdO1xyXG5cclxuICAgXHJcbiAgICAgICAgaWYoY3JlYXRlZCAqIDEgPT0gY3JlYXRlZClcclxuICAgICAgICBjcmVhdGVkID0gY3JlYXRlZCAqIDFcclxuXHJcbiAgICAgICAgaWYoZWRpdGVkICogMSA9PSBlZGl0ZWQpXHJcbiAgICAgICAgZWRpdGVkID0gZWRpdGVkICogMVxyXG4gICAgXHJcbiAgICBjb250ZW50LnB1c2goPHNwYW4+Q3JlYXRlZDoge2Zvcm1hdERhdGUobmV3IERhdGUoY3JlYXRlZCkpfTxiciAvPjwvc3Bhbj4pO1xyXG4gICAgaWYoZWRpdGVkKXtcclxuICAgICAgICBjb250ZW50LnB1c2goPHNwYW4+TGFzdCBVcGRhdGVkOiB7Zm9ybWF0RGF0ZShuZXcgRGF0ZShlZGl0ZWQpKX08YnIgLz48L3NwYW4+KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gKDxwPntjb250ZW50fTwvcD4pXHJcblxyXG59XHJcblxyXG5mdW5jdGlvbiBmb3JtYXREYXRlKGRhdGUpe1xyXG4gICAgcmV0dXJuIFwiXCJcclxuICAgICsgZGF0ZS5nZXRVVENGdWxsWWVhcigpICsgJy0nXHJcbiAgICArIHBhZCgoMSArIGRhdGUuZ2V0VVRDTW9udGgoKSksMikgKyAnLSdcclxuICAgICsgcGFkKGRhdGUuZ2V0VVRDRGF0ZSgpLDIpICsgXCIgXCJcclxuICAgICsgcGFkKChkYXRlLmdldFVUQ0hvdXJzKCkgJSAxMiksIDIpICsgXCI6XCJcclxuICAgICsgcGFkKGRhdGUuZ2V0VVRDTWludXRlcygpLCAyKSArIFwiOlwiXHJcbiAgICArIHBhZChkYXRlLmdldFVUQ1NlY29uZHMoKSwgMikgKyBcIiBcIlxyXG4gICAgKyAoTWF0aC5mbG9vcihkYXRlLmdldFVUQ0hvdXJzKCkgLyAxMikgPT0gMCA/IFwiQU1cIiA6IFwiUE1cIilcclxuICAgICsgXCIgKFVUQylcIlxyXG59XHJcblxyXG5mdW5jdGlvbiBwYWQobnVtLCBzaXplKSB7XHJcbiAgICB2YXIgcyA9IG51bStcIlwiO1xyXG4gICAgd2hpbGUgKHMubGVuZ3RoIDwgc2l6ZSkgcyA9IFwiMFwiICsgcztcclxuICAgIHJldHVybiBzO1xyXG59XHJcblxyXG5Qb3N0cy5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbihjb250ZXh0KSB7XHJcbiAgICBjb25zdCB7IGlkIH0gPSBjb250ZXh0LnF1ZXJ5O1xyXG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vZG9jcy5nb29nbGUuY29tL3NwcmVhZHNoZWV0cy9kL2UvMlBBQ1gtMXZTQWY1YTFwd0lqLXlqS1BGaG95UWRIVFMzaEhCTlpWWVhRUlRDb0FIWGQ2ellNeTU4aVpyMElXMDU0V2dsQkprOWFma25zVEllVlM4ZUYvcHViP291dHB1dD1jc3YnKTtcclxuICAgIGNvbnN0IGNzdiA9IGF3YWl0IHJlcy50ZXh0KCk7XHJcbiAgICBjb25zdCBqc29uID0gYXdhaXQgY3N2dG9qc29uKCkuZnJvbVN0cmluZyhjc3YpLnRoZW4oanNvbiA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGpzb247XHJcbiAgICB9KTtcclxuICAgIGxldCBmb3VuZCA9IGZhbHNlO1xyXG4gICAgLy9lcnJvciBwb3N0IGJ5IGRlZmF1bHRcclxuICAgIGxldCB1cmwgPSBcImh0dHBzOi8vZG9jcy5nb29nbGUuY29tL2RvY3VtZW50L2QvZS8yUEFDWC0xdlRXM0syVFlGb0VUN0lUNWZpMndmUEJtSHYzS0ZqaUtGcDZGV3NuTDY5dlhja01ONlBsd1NMdURsTzZnUmw0X2pBZk55Wl9oUTlVb1FxSy9wdWI/ZW1iZWRkZWQ9dHJ1ZVwiO1xyXG4gICAgbGV0IHBvc3REYXRhID0ge3RpdGxlOiBcIk5vdCBmb3VuZC5cIn1cclxuICAgIGZvcihsZXQgaSA9IDA7IGkgPCBqc29uLmxlbmd0aCAmJiAhZm91bmQ7IGkrKyl7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyhqc29uW2ldKVxyXG4gICAgICAgIGlmKGpzb25baV0uaWQgPT0gaWQpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKGkpXHJcbiAgICAgICAgICAgIGZvdW5kID0gdHJ1ZTtcclxuICAgICAgICAgICAgdXJsID0ganNvbltpXS5kb2M7XHJcbiAgICAgICAgICAgIHBvc3REYXRhID0ganNvbltpXTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG4gICAgbGV0IGRvYyA9IG5ldyBHb29nbGVEb2ModXJsKTtcclxuICAgIGNvbnN0IGRvY2RhdGEgPSBhd2FpdCBkb2MuZ2V0RGF0YSgpO1xyXG4gICAgbGV0IGJvZHkgPSBkb2NkYXRhLmJvZHk7XHJcbiAgICBpZihib2R5LmluY2x1ZGVzKCc8aDE+T25lIGFjY291bnQuIEFsbCBvZiBHb29nbGUuPC9oMT48aDIgY2xhc3M9XCJoaWRkZW4tc21hbGxcIj5TaWduIGluIHRvIGNvbnRpbnVlIHRvIERvY3M8L2gyPicpKXtcclxuICAgICAgICBib2R5ID0gXCI8aDE+T29wcywgcG9zdCBjb250ZW50IG5vdCBmb3VuZC4uLjwvaDE+PGgyPkxvb2tzIGxpa2UgdGhpcyBwb3N0IGlzIHByaXZhdGUgb3IgcmVtb3ZlZC4gQ2hlY2sgYmFjayBsYXRlciE8L2gyPjxwPkVycm9yIGNvZGU6IDE8L3A+XCJcclxuICAgIH1cclxuICAgIGlmKGJvZHkuaW5jbHVkZXMoJzxkaXYgIGNsYXNzPVwibWFpbiBjb250ZW50IGNsZWFyZml4XCI+JykgJiYgYm9keS5pbmNsdWRlcygnT25lIGFjY291bnQuIEFsbCBvZiBHb29nbGUuJykgJiYgYm9keS5pbmNsdWRlcygnIFNpZ24gaW4gdG8gY29udGludWUgdG8gRG9jcycpKXtcclxuICAgICAgICBib2R5ID0gXCI8aDE+T29wcywgcG9zdCBjb250ZW50IG5vdCBmb3VuZC4uLjwvaDE+PGgyPkxvb2tzIGxpa2UgdGhpcyBwb3N0IGlzIHByaXZhdGUgb3IgcmVtb3ZlZC4gQ2hlY2sgYmFjayBsYXRlciE8L2gyPjxwPkVycm9yIGNvZGU6IDI8L3A+XCJcclxuICAgIH1cclxuICAgIGNvbnN0IHN0eWxlID0gZG9jZGF0YS5zdHlsZTtcclxuICAgIC8vY29uc29sZS5sb2coYm9keSlcclxuICAgIC8vY29uc3QganNvbiA9IGF3YWl0IGNzdnRvanNvblxyXG4gICAgcmV0dXJuIHtwb3N0c0RhdGE6IGpzb24sIGlkOiBpZCwgYm9keToge19faHRtbDogYm9keX0sIHN0eWxlOiBzdHlsZSwgcG9zdERhdGF9XHJcbn1cclxuIl19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Bakk\\\\\\\\Documents\\\\\\\\GitHub\\\\\\\\yernemm-xyz\\\\\\\\pages\\\\\\\\posts\\\\\\\\[id].js */\")), __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: dateStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, getDates(props.postData.created, props.postData.updated)));\n};\n\nexport default Posts;\nvar dateStyle = {\n  color: '#999',\n  fontSize: '80%'\n};\n\nfunction getDates(created, edited) {\n  var content = [];\n  if (created * 1 == created) created = created * 1;\n  if (edited * 1 == edited) edited = edited * 1;\n  content.push(__jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }\n  }, \"Created: \", formatDate(new Date(created)), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 64\n    }\n  })));\n\n  if (edited) {\n    content.push(__jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 22\n      }\n    }, \"Last Updated: \", formatDate(new Date(edited)), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 72\n      }\n    })));\n  }\n\n  return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, content);\n}\n\nfunction formatDate(date) {\n  return \"\" + date.getUTCFullYear() + '-' + pad(1 + date.getUTCMonth(), 2) + '-' + pad(date.getUTCDate(), 2) + \" \" + pad(date.getUTCHours() % 12, 2) + \":\" + pad(date.getUTCMinutes(), 2) + \":\" + pad(date.getUTCSeconds(), 2) + \" \" + (Math.floor(date.getUTCHours() / 12) == 0 ? \"AM\" : \"PM\") + \" (UTC)\";\n}\n\nfunction pad(num, size) {\n  var s = num + \"\";\n\n  while (s.length < size) {\n    s = \"0\" + s;\n  }\n\n  return s;\n}\n\nPosts.getInitialProps = function _callee(context) {\n  var id, res, csv, json, found, url, postData, i, doc, docdata, body, style;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch('https://docs.google.com/spreadsheets/d/e/2PACX-1vSAf5a1pwIj-yjKPFhoyQdHTS3hHBNZVYXQRTCoAHXd6zYMy58iZr0IW054WglBJk9afknsTIeVS8eF/pub?output=csv'));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.text());\n\n        case 6:\n          csv = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(csvtojson().fromString(csv).then(function (json) {\n            return json;\n          }));\n\n        case 9:\n          json = _context.sent;\n          found = false; //error post by default\n\n          url = \"https://docs.google.com/document/d/e/2PACX-1vTW3K2TYFoET7IT5fi2wfPBmHv3KFjiKFp6FWsnL69vXckMN6PlwSLuDlO6gRl4_jAfNyZ_hQ9UoQqK/pub?embedded=true\";\n          postData = {\n            title: \"Not found.\"\n          };\n\n          for (i = 0; i < json.length && !found; i++) {\n            //console.log(json[i])\n            if (json[i].id == id) {\n              //console.log(i)\n              found = true;\n              url = json[i].doc;\n              postData = json[i];\n            }\n          }\n\n          doc = new GoogleDoc(url);\n          _context.next = 17;\n          return _regeneratorRuntime.awrap(doc.getData());\n\n        case 17:\n          docdata = _context.sent;\n          body = docdata.body;\n\n          if (body.includes('<h1>One account. All of Google.</h1><h2 class=\"hidden-small\">Sign in to continue to Docs</h2>')) {\n            body = \"<h1>Oops, post content not found...</h1><h2>Looks like this post is private or removed. Check back later!</h2><p>Error code: 1</p>\";\n          }\n\n          if (body.includes('<div  class=\"main content clearfix\">') && body.includes('One account. All of Google.') && body.includes(' Sign in to continue to Docs')) {\n            body = \"<h1>Oops, post content not found...</h1><h2>Looks like this post is private or removed. Check back later!</h2><p>Error code: 2</p>\";\n          }\n\n          style = docdata.style; //console.log(body)\n          //const json = await csvtojson\n\n          return _context.abrupt(\"return\", {\n            postsData: json,\n            id: id,\n            body: {\n              __html: body\n            },\n            style: style,\n            postData: postData\n          });\n\n        case 23:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/Bakk/Documents/GitHub/yernemm-xyz/pages/posts/[id].js"],"names":["Wrapper","fetch","Link","GoogleDoc","Head","csvtojson","require","Posts","props","postData","title","body","dateStyle","getDates","created","updated","color","fontSize","edited","content","push","formatDate","Date","date","getUTCFullYear","pad","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","Math","floor","num","size","s","length","getInitialProps","context","id","query","res","text","csv","fromString","then","json","found","url","i","doc","getData","docdata","includes","style","postsData","__html"],"mappings":"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","sourcesContent":["import Wrapper from '../../components/page-wrapper';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Link from 'next/link';\r\nimport GoogleDoc from '../../scripts/GoogleDoc'\r\nimport Head from 'next/head'\r\nconst csvtojson = require(\"csvtojson\");\r\nlet Posts = props => ( \r\n    <Wrapper title={\"Post: \" + props.postData.title} >\r\n\r\n        \r\n      <div dangerouslySetInnerHTML={props.body} className=\"belowdiv\" />\r\n      <Head><style jsx global>{`\r\n  /* unvisited link */\r\n  a:link {\r\n    color: #ccf;\r\n  }\r\n  \r\n  /* visited link */\r\n  a:visited {\r\n    color: #ccf;\r\n  }\r\n  \r\n  /* mouse over link */\r\n  a:hover {\r\n    color: #88f;\r\n  }\r\n  \r\n  /* selected link */\r\n  a:active {\r\n    color: #88f;\r\n  }\r\n\r\n  img {\r\n      max-width: 100%;\r\n  }\r\n`}</style></Head>\r\n      \r\n      <hr />\r\n        <div style={dateStyle}>{getDates(props.postData.created, props.postData.updated)}</div>\r\n    </Wrapper>\r\n)\r\n\r\nexport default Posts\r\n\r\nconst dateStyle = {\r\n    color: '#999',\r\n    fontSize: '80%'\r\n}\r\n\r\nfunction getDates(created, edited){\r\n    let content = [];\r\n\r\n   \r\n        if(created * 1 == created)\r\n        created = created * 1\r\n\r\n        if(edited * 1 == edited)\r\n        edited = edited * 1\r\n    \r\n    content.push(<span>Created: {formatDate(new Date(created))}<br /></span>);\r\n    if(edited){\r\n        content.push(<span>Last Updated: {formatDate(new Date(edited))}<br /></span>);\r\n    }\r\n\r\n    return (<p>{content}</p>)\r\n\r\n}\r\n\r\nfunction formatDate(date){\r\n    return \"\"\r\n    + date.getUTCFullYear() + '-'\r\n    + pad((1 + date.getUTCMonth()),2) + '-'\r\n    + pad(date.getUTCDate(),2) + \" \"\r\n    + pad((date.getUTCHours() % 12), 2) + \":\"\r\n    + pad(date.getUTCMinutes(), 2) + \":\"\r\n    + pad(date.getUTCSeconds(), 2) + \" \"\r\n    + (Math.floor(date.getUTCHours() / 12) == 0 ? \"AM\" : \"PM\")\r\n    + \" (UTC)\"\r\n}\r\n\r\nfunction pad(num, size) {\r\n    var s = num+\"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n}\r\n\r\nPosts.getInitialProps = async function(context) {\r\n    const { id } = context.query;\r\n    const res = await fetch('https://docs.google.com/spreadsheets/d/e/2PACX-1vSAf5a1pwIj-yjKPFhoyQdHTS3hHBNZVYXQRTCoAHXd6zYMy58iZr0IW054WglBJk9afknsTIeVS8eF/pub?output=csv');\r\n    const csv = await res.text();\r\n    const json = await csvtojson().fromString(csv).then(json => {\r\n        return json;\r\n    });\r\n    let found = false;\r\n    //error post by default\r\n    let url = \"https://docs.google.com/document/d/e/2PACX-1vTW3K2TYFoET7IT5fi2wfPBmHv3KFjiKFp6FWsnL69vXckMN6PlwSLuDlO6gRl4_jAfNyZ_hQ9UoQqK/pub?embedded=true\";\r\n    let postData = {title: \"Not found.\"}\r\n    for(let i = 0; i < json.length && !found; i++){\r\n        //console.log(json[i])\r\n        if(json[i].id == id)\r\n        {\r\n            //console.log(i)\r\n            found = true;\r\n            url = json[i].doc;\r\n            postData = json[i];\r\n        }\r\n\r\n    }\r\n    let doc = new GoogleDoc(url);\r\n    const docdata = await doc.getData();\r\n    let body = docdata.body;\r\n    if(body.includes('<h1>One account. All of Google.</h1><h2 class=\"hidden-small\">Sign in to continue to Docs</h2>')){\r\n        body = \"<h1>Oops, post content not found...</h1><h2>Looks like this post is private or removed. Check back later!</h2><p>Error code: 1</p>\"\r\n    }\r\n    if(body.includes('<div  class=\"main content clearfix\">') && body.includes('One account. All of Google.') && body.includes(' Sign in to continue to Docs')){\r\n        body = \"<h1>Oops, post content not found...</h1><h2>Looks like this post is private or removed. Check back later!</h2><p>Error code: 2</p>\"\r\n    }\r\n    const style = docdata.style;\r\n    //console.log(body)\r\n    //const json = await csvtojson\r\n    return {postsData: json, id: id, body: {__html: body}, style: style, postData}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}