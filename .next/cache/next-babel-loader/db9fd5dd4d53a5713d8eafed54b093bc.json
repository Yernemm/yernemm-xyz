{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bakk\\\\Documents\\\\GitHub\\\\yernemm-xyz\\\\pages\\\\projects\\\\processing.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Wrapper from '../../components/page-wrapper';\nimport { faRssSquare } from '@fortawesome/free-solid-svg-icons';\nimport { getAllProcessing } from '../../scripts/getAllProcessing';\nimport Link from 'next/link';\n\nvar Proc = function Proc(props) {\n  return __jsx(React.Fragment, null, __jsx(Wrapper, {\n    title: \"Processing Experiments\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, \"Here are some projects I made when trying out Processing using \", __jsx(\"a\", {\n    href: \"https://p5js.org/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 19\n    }\n  }, \"p5.js\"), \".\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }), \"These may or may not be entirely functional.\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, props.projData.paths.map(function (data) {\n    return __jsx(\"li\", {\n      key: data,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"/projects/processing/[id]\",\n      as: \"/projects/processing/\".concat(data),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, data)), \" \");\n  }))));\n};\n\nexport var __N_SSP = true;\nexport default Proc;","map":{"version":3,"sources":["C:/Users/Bakk/Documents/GitHub/yernemm-xyz/pages/projects/processing.js"],"names":["Wrapper","faRssSquare","getAllProcessing","Link","Proc","props","projData","paths","map","data"],"mappings":";;;;;AAAA,OAAOA,OAAP,MAAoB,+BAApB;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAAQC,gBAAR,QAA+B,gCAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,IAAIC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAAK,4BACjB,MAAC,OAAD;AAAS,IAAA,KAAK,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEACU;AAAG,IAAA,IAAI,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADV,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,iDAFJ,EAUQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACHA,KAAK,CAACC,QAAN,CAAeC,KAAf,CAAqBC,GAArB,CAAyB,UAAAC,IAAI;AAAA,WAC9B;AAAI,MAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,2BAAX;AAAuC,MAAA,EAAE,iCAA0BA,IAA1B,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,IAAJ,CADA,CADF,MAD8B;AAAA,GAA7B,CADG,CAVR,CADiB,CAAL;AAAA,CAAhB;;;AAwBA,eAAeL,IAAf","sourcesContent":["import Wrapper from '../../components/page-wrapper';\r\nimport { faRssSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport {getAllProcessing} from '../../scripts/getAllProcessing';\r\nimport Link from 'next/link';\r\nlet Proc = props => (<>\r\n    <Wrapper title='Processing Experiments'>\r\n \r\n        <p>Here are some projects I made when trying out Processing \r\n            using <a href=\"https://p5js.org/\">p5.js</a>.\r\n            <br />\r\n            These may or may not be entirely functional.\r\n\r\n            </p>\r\n\r\n\r\n            <ul>\r\n        {props.projData.paths.map(data=>(\r\n        <li key={data}>\r\n          <Link href=\"/projects/processing/[id]\" as={`/projects/processing/${data}`}>\r\n          <a>{data}\r\n            </a></Link> </li>\r\n        ))}\r\n        </ul>\r\n\r\n            \r\n    </Wrapper></>\r\n)\r\n\r\nexport default Proc\r\n\r\nexport async function getServerSideProps(context) {\r\n    if (typeof window === 'undefined') {\r\n    const { readdirSync } = require('fs');\r\n\r\n    let paths =   readdirSync('public/projects/processing/', { withFileTypes: true })\r\n    .filter(dirent => dirent.isDirectory())\r\n    .map(dirent => dirent.name);\r\n\r\n\r\n    const projData = {paths:paths}\r\n    return { props: {projData} }\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}