{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Wrapper from '../../components/page-wrapper';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport GoogleDoc from '../../scripts/GoogleDoc';\nimport Head from 'next/head';\n\nconst csvtojson = require(\"csvtojson\");\n\nlet Posts = props => __jsx(Wrapper, {\n  title: \"Post: \" + props.postData.title\n}, __jsx(\"div\", {\n  dangerouslySetInnerHTML: props.body,\n  className: \"belowdiv\"\n}), __jsx(Head, null, __jsx(_JSXStyle, {\n  id: \"3050419254\"\n}, [\"a:link{color:#ccf;}\", \"a:visited{color:#ccf;}\", \"a:hover{color:#88f;}\", \"a:active{color:#88f;}\", \"img{max-width:100%;}\"])), __jsx(\"hr\", null), __jsx(\"div\", {\n  style: dateStyle\n}, getDates(props.postData.created, props.postData.updated)));\n\nexport default Posts;\nconst dateStyle = {\n  color: '#999',\n  fontSize: '80%'\n};\n\nfunction getDates(created, edited) {\n  let content = [];\n  if (created * 1 == created) created = created * 1;\n  if (edited * 1 == edited) edited = edited * 1;\n  content.push(__jsx(\"span\", null, \"Created: \", formatDate(new Date(created)), __jsx(\"br\", null)));\n\n  if (edited) {\n    content.push(__jsx(\"span\", null, \"Last Updated: \", formatDate(new Date(edited)), __jsx(\"br\", null)));\n  }\n\n  return __jsx(\"p\", null, content);\n}\n\nfunction formatDate(date) {\n  return \"\" + date.getUTCFullYear() + '-' + pad(1 + date.getUTCMonth(), 2) + '-' + pad(date.getUTCDate(), 2) + \" \" + pad(date.getUTCHours() % 12, 2) + \":\" + pad(date.getUTCMinutes(), 2) + \":\" + pad(date.getUTCSeconds(), 2) + \" \" + (Math.floor(date.getUTCHours() / 12) == 0 ? \"AM\" : \"PM\") + \" (UTC)\";\n}\n\nfunction pad(num, size) {\n  var s = num + \"\";\n\n  while (s.length < size) s = \"0\" + s;\n\n  return s;\n}\n\nPosts.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch('https://docs.google.com/spreadsheets/d/e/2PACX-1vSAf5a1pwIj-yjKPFhoyQdHTS3hHBNZVYXQRTCoAHXd6zYMy58iZr0IW054WglBJk9afknsTIeVS8eF/pub?output=csv');\n  const csv = await res.text();\n  const json = await csvtojson().fromString(csv).then(json => {\n    return json;\n  });\n  let found = false; //error post by default\n\n  let url = \"https://docs.google.com/document/d/e/2PACX-1vTW3K2TYFoET7IT5fi2wfPBmHv3KFjiKFp6FWsnL69vXckMN6PlwSLuDlO6gRl4_jAfNyZ_hQ9UoQqK/pub?embedded=true\";\n  let postData = {\n    title: \"Not found.\"\n  };\n\n  for (let i = 0; i < json.length && !found; i++) {\n    //console.log(json[i])\n    if (json[i].id == id) {\n      //console.log(i)\n      found = true;\n      url = json[i].doc;\n      postData = json[i];\n    }\n  }\n\n  let doc = new GoogleDoc(url);\n  const docdata = await doc.getData();\n  let body = docdata.body;\n\n  if (body.includes('<h1>One account. All of Google.</h1><h2 class=\"hidden-small\">Sign in to continue to Docs</h2>')) {\n    body = \"<h1>Oops, post content not found...</h1><h2>Looks like this post is private or removed. Check back later!</h2><p>Error code: 1</p>\";\n  }\n\n  if (body.includes('<div  class=\"main content clearfix\">') && body.includes('One account. All of Google.') && body.includes(' Sign in to continue to Docs')) {\n    body = \"<h1>Oops, post content not found...</h1><h2>Looks like this post is private or removed. Check back later!</h2><p>Error code: 2</p>\";\n  }\n\n  const style = docdata.style; //console.log(body)\n  //const json = await csvtojson\n\n  return {\n    postsData: json,\n    id: id,\n    body: {\n      __html: body\n    },\n    style: style,\n    postData\n  };\n};","map":null,"metadata":{},"sourceType":"module"}