{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Wrapper from '../components/page-wrapper';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nvar u = require('../scripts/util.js');\n\nvar csvtojson = require(\"csvtojson\");\n\nvar Posts = function Posts(props) {\n  return __jsx(Wrapper, {\n    title: \"Posts\"\n  }, __jsx(\"div\", null, props.postsData.map(function (data) {\n    return __jsx(\"div\", {\n      key: data.id,\n      className: \"jsx-995136902\" + \" \" + 'hoverListItem'\n    }, __jsx(Link, {\n      href: \"/posts/[id]\",\n      as: \"/posts/\".concat(data.id)\n    }, __jsx(\"a\", {\n      className: \"jsx-995136902\"\n    }, __jsx(\"span\", {\n      className: \"jsx-995136902\"\n    }, __jsx(\"a\", {\n      className: \"jsx-995136902\"\n    }, __jsx(\"p\", {\n      className: \"jsx-995136902\"\n    }, \" \", data.title), __jsx(\"p\", {\n      style: {\n        fontSize: '60%'\n      },\n      className: \"jsx-995136902\"\n    }, \"Created: \", u.formatDate(u.getDateObj(data.created)))), __jsx(\"hr\", {\n      className: \"jsx-995136902\"\n    })))), \" \", __jsx(_JSXStyle, {\n      id: \"995136902\"\n    }, [\"a.jsx-995136902{-webkit-text-decoration:none;text-decoration:none;}\", \"a.jsx-995136902:link{color:#ccf;}\", \"a.jsx-995136902:visited{color:#ccf;}\", \"a.jsx-995136902:hover{color:#88f;}\", \"a.jsx-995136902:active{color:#88f;}\"]));\n  })));\n};\n\nexport default Posts;\n\nPosts.getInitialProps = function _callee() {\n  var res, csv, json, i, stamp, d, sortByDate;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          sortByDate = function _sortByDate(a, b) {\n            if (a.createdStamp > b.createdStamp) return -1;\n            if (a.createdStamp < b.createdStamp) return 1;\n            return 0;\n          };\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch('https://docs.google.com/spreadsheets/d/e/2PACX-1vSAf5a1pwIj-yjKPFhoyQdHTS3hHBNZVYXQRTCoAHXd6zYMy58iZr0IW054WglBJk9afknsTIeVS8eF/pub?output=csv'));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.text());\n\n        case 6:\n          csv = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(csvtojson().fromString(csv).then(function (json) {\n            return json;\n          }));\n\n        case 9:\n          json = _context.sent;\n\n          for (i = 0; i < json.length; i++) {\n            stamp = json[i].created;\n            if (stamp * 1 == stamp) stamp = stamp * 1;\n            d = new Date(stamp);\n            json[i].createdStamp = +d;\n          }\n\n          json = json.sort(sortByDate);\n          return _context.abrupt(\"return\", {\n            postsData: json\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nfunction convert(csv) {\n  return _regeneratorRuntime.async(function convert$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":null,"metadata":{},"sourceType":"module"}