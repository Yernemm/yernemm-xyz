{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Wrapper from '../components/page-wrapper';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nconst u = require('../scripts/util.js');\n\nconst csvtojson = require(\"csvtojson\");\n\nlet Posts = props => __jsx(Wrapper, {\n  title: \"Posts\"\n}, __jsx(\"div\", null, props.postsData.map(data => __jsx(\"div\", {\n  key: data.id,\n  className: \"jsx-995136902\" + \" \" + 'hoverListItem'\n}, __jsx(Link, {\n  href: \"/posts/[id]\",\n  as: `/posts/${data.id}`\n}, __jsx(\"a\", {\n  className: \"jsx-995136902\"\n}, __jsx(\"span\", {\n  className: \"jsx-995136902\"\n}, __jsx(\"a\", {\n  className: \"jsx-995136902\"\n}, __jsx(\"p\", {\n  className: \"jsx-995136902\"\n}, \" \", data.title), __jsx(\"p\", {\n  style: {\n    fontSize: '60%'\n  },\n  className: \"jsx-995136902\"\n}, \"Created: \", u.formatDate(u.getDateObj(data.created)))), __jsx(\"hr\", {\n  className: \"jsx-995136902\"\n})))), \" \", __jsx(_JSXStyle, {\n  id: \"995136902\"\n}, [\"a.jsx-995136902{-webkit-text-decoration:none;text-decoration:none;}\", \"a.jsx-995136902:link{color:#ccf;}\", \"a.jsx-995136902:visited{color:#ccf;}\", \"a.jsx-995136902:hover{color:#88f;}\", \"a.jsx-995136902:active{color:#88f;}\"])))));\n\nexport default Posts;\n\nPosts.getInitialProps = async function () {\n  const res = await fetch('https://docs.google.com/spreadsheets/d/e/2PACX-1vSAf5a1pwIj-yjKPFhoyQdHTS3hHBNZVYXQRTCoAHXd6zYMy58iZr0IW054WglBJk9afknsTIeVS8eF/pub?output=csv');\n  const csv = await res.text();\n  let json = await csvtojson().fromString(csv).then(json => {\n    return json;\n  });\n\n  for (let i = 0; i < json.length; i++) {\n    let stamp = json[i].created;\n    if (stamp * 1 == stamp) stamp = stamp * 1;\n    let d = new Date(stamp);\n    json[i].createdStamp = +d;\n  }\n\n  json = json.sort(sortByDate);\n\n  function sortByDate(a, b) {\n    if (a.createdStamp > b.createdStamp) return -1;\n    if (a.createdStamp < b.createdStamp) return 1;\n    return 0;\n  } //const json = await csvtojson\n\n\n  return {\n    postsData: json\n  };\n};\n\nasync function convert(csv) {}","map":null,"metadata":{},"sourceType":"module"}