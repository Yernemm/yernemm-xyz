{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Bakk\\\\Documents\\\\GitHub\\\\yernemm-xyz\\\\pages\\\\projects\\\\processing.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Wrapper from '../../components/page-wrapper';\nimport { faRssSquare } from '@fortawesome/free-solid-svg-icons';\nimport { getAllProcessing } from '../../scripts/getAllProcessing';\n\nvar Proc = function Proc(props) {\n  return __jsx(React.Fragment, null, __jsx(Wrapper, {\n    title: \"Processing Experiments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Here are some projects I made when trying out Processing using \", __jsx(\"a\", {\n    href: \"https://p5js.org/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"p5.js\"), \".\", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), \"These may or may not be entirely functional.\"), props.projData.paths[0], __jsx(\"iframe\", {\n    frameBorder: \"0\",\n    style: {\n      width: '100%',\n      height: '1000px'\n    },\n    src: \"/projects/processing/wavyboi/index.html\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })));\n};\n\nexport default Proc;\n\nProc.getInitialProps = function _callee(context) {\n  var _require, readdirSync, paths, projData;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _require = require('fs'), readdirSync = _require.readdirSync;\n          paths = readdirSync('public/projects/processing/', {\n            withFileTypes: true\n          }).filter(function (dirent) {\n            return dirent.isDirectory();\n          }).map(function (dirent) {\n            return dirent.name;\n          });\n          console.log(paths);\n          projData = {\n            paths: paths\n          };\n          return _context.abrupt(\"return\", {\n            projData: projData\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Bakk/Documents/GitHub/yernemm-xyz/pages/projects/processing.js"],"names":["Wrapper","faRssSquare","getAllProcessing","Proc","props","projData","paths","width","height","getInitialProps","context","require","readdirSync","withFileTypes","filter","dirent","isDirectory","map","name","console","log"],"mappings":";;;;AAAA,OAAOA,OAAP,MAAoB,+BAApB;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAAQC,gBAAR,QAA+B,gCAA/B;;AACA,IAAIC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAAK,4BACjB,MAAC,OAAD;AAAS,IAAA,KAAK,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEACU;AAAG,IAAA,IAAI,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADV,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,iDAFJ,EASSA,KAAK,CAACC,QAAN,CAAeC,KAAf,CAAqB,CAArB,CATT,EAWQ;AAAQ,IAAA,WAAW,EAAC,GAApB;AAAwB,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC,MAAP;AAAeC,MAAAA,MAAM,EAAC;AAAtB,KAA/B;AAAgE,IAAA,GAAG,EAAC,yCAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXR,CADiB,CAAL;AAAA,CAAhB;;AAiBA,eAAeL,IAAf;;AAEAA,IAAI,CAACM,eAAL,GAAuB,iBAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKC,OAAO,CAAC,IAAD,CADZ,EACXC,WADW,YACXA,WADW;AAGfN,UAAAA,KAHe,GAGLM,WAAW,CAAC,6BAAD,EAAgC;AAAEC,YAAAA,aAAa,EAAE;AAAjB,WAAhC,CAAX,CACbC,MADa,CACN,UAAAC,MAAM;AAAA,mBAAIA,MAAM,CAACC,WAAP,EAAJ;AAAA,WADA,EAEbC,GAFa,CAET,UAAAF,MAAM;AAAA,mBAAIA,MAAM,CAACG,IAAX;AAAA,WAFG,CAHK;AAOnBC,UAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AAEMD,UAAAA,QATa,GASF;AAACC,YAAAA,KAAK,EAACA;AAAP,WATE;AAAA,2CAUZ;AAAED,YAAAA,QAAQ,EAARA;AAAF,WAVY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import Wrapper from '../../components/page-wrapper';\r\nimport { faRssSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport {getAllProcessing} from '../../scripts/getAllProcessing';\r\nlet Proc = props => (<>\r\n    <Wrapper title='Processing Experiments'>\r\n \r\n        <p>Here are some projects I made when trying out Processing \r\n            using <a href=\"https://p5js.org/\">p5.js</a>.\r\n            <br />\r\n            These may or may not be entirely functional.\r\n\r\n            </p>\r\n\r\n            {props.projData.paths[0]}\r\n\r\n            <iframe frameBorder=\"0\" style={{width:'100%', height:'1000px'}} src=\"/projects/processing/wavyboi/index.html\"></iframe>\r\n\r\n    </Wrapper></>\r\n)\r\n\r\nexport default Proc\r\n\r\nProc.getInitialProps = async function(context) {\r\n    const { readdirSync } = require('fs');\r\n\r\n    let paths =   readdirSync('public/projects/processing/', { withFileTypes: true })\r\n    .filter(dirent => dirent.isDirectory())\r\n    .map(dirent => dirent.name);\r\n\r\n    console.log(paths);\r\n\r\n    const projData = {paths:paths}\r\n    return { projData }\r\n  }"]},"metadata":{},"sourceType":"module"}